#!/usr/bin/env python

#--------------------------------------------------
# Update the network settings of an Azure VM
#--------------------------------------------------

import logging
from azure import *
from azure.servicemanagement import *
import os.path
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), os.path.pardir)))
from lib.azutil import *
from lib.azmanage import *

def main():
	# Configure logging
	log = logging.getLogger('gslogger')
	log_console = logging.StreamHandler(sys.stdout)
	log_console.setFormatter(logging.Formatter('%(levelname)-8s  %(message)s'))
	log_console.setLevel(logging.INFO)
	log.addHandler(log_console)
	log.setLevel(logging.INFO)

	# Import credentials from file
	creds = AZCreds()

	# Create management object
	sms = ServiceManagementService(creds.subscription_id, creds.certificate_file)

	vm_name = "gst-mew-rt01"
	service_name = "gst-mew-rt01"
	deployment_name = "gst-mew-rt01"
	subnet = "SERVICE"
	ip = "10.170.20.11"

	vm_network = ConfigurationSet()
	vm_network.configuration_set_type = 'NetworkConfiguration'
	
    for x in range(5000, 6000):
        if str(x)[-1] == '0' and str(x)[-2] == '0':
    	    endpoint = ConfigurationSetInputEndpoint(vm_name + '-' + x, 'tcp', x, x)
    	    vm_network.input_endpoints.input_endpoints.append(endpoint)
            
	    endpoint = ConfigurationSetInputEndpoint(vm_name + '-' + x, 'udp', x, x)
	    vm_network.input_endpoints.input_endpoints.append(endpoint)

	vm_network.subnet_names = [ subnet ]

	vm_network.static_virtual_network_ip_address = ip
    
    print vm_network.__dict__
    exit()

	result = sms.update_role(service_name, deployment_name, vm_name, network_config=vm_network)

	async_wait(sms, result.request_id)

if __name__ == "__main__":
	main()
